<?php

/**
 * Implementation of hook_form_FORM_ID_alter()
 */
function blockexpose_form_block_admin_configure_alter(&$form, &$form_state, $form_id){
  $settings = variable_get('display_as_tab', array());
  $settings_side = variable_get('display_as_tab_side', array());
  $form['blockexpose'] = array(
    '#type' => 'fieldset',
    '#title' => t('Tabify the block'),
    '#group' => 'visibility',
    'display_as_tab' => array(
      '#type' => 'checkbox',
      '#default_value' => isset($settings[$form['module']['#value']][$form['delta']['#value']]) ? $settings[$form['module']['#value']][$form['delta']['#value']] : 0,
      '#description' => t('Tick the box to display this block as a tab hidden at the edge of a page'),
      '#title' => t('Display as tab')
    ),
    'display_as_tab_side' => array(
      '#type' => 'select',
      '#default_value' => isset($settings_side[$form['module']['#value']][$form['delta']['#value']]) ? $settings_side[$form['module']['#value']][$form['delta']['#value']] : 'right',
      '#description' => t('What side of the page should the tab be displayed on?'),
      '#title' => t('Side'),
      '#options' => array(
        'left' => t('Left'),
        'right' => t('Right')
      )
    )
  );
  $blockexpose_submit = array(
    'blockexpose_block_admin_configure_form_submit'
  );
  $form['#submit'] = is_array($form['#submit']) ? array_merge($form['#submit'], $blockexpose_submit) : $blockexpose_submit;
}

/**
 * Submit function for saving the above settings.
 */
function blockexpose_block_admin_configure_form_submit($form, &$form_state){
  // Save the tab status
  $settings = variable_get('display_as_tab', array());
  $settings[$form_state['values']['module']][$form_state['values']['delta']] = $form_state['values']['display_as_tab'];
  variable_set('display_as_tab', $settings);
  // Save the side
  $settings = variable_get('display_as_tab_side', array());
  $settings[$form_state['values']['module']][$form_state['values']['delta']] = $form_state['values']['display_as_tab_side'];
  variable_set('display_as_tab_side', $settings);
}

/**
 * Implementation of hook_theme()
 */
function blockexpose_theme($existing, $type, $theme, $path){
  return array(
    'blockexpose' => array(
      'variables' => array(
        'data' => array()
      )
    )
  );
}

/**
 * Implementation of hook_block_view_alter()
 */
function blockexpose_block_view_alter(&$data, $block){
  // Are we changing this block?
  $settings = variable_get('display_as_tab', array());
  // Note, we only change the block if the user has JS
  if(isset($settings[$block->module][$block->delta]) && $settings[$block->module][$block->delta] && (isset($_COOKIE['has_js']) && $_COOKIE['has_js'])){
    // We actually save the $data array for use later in the hook_footer
    // function.  This prevents an empty block from appearing in the side bar
    // (depending on theme).
    $blockexpose = &drupal_static('blockexpose', array());
    $blockexpose[] = array(
      'data' => $data,
      'block' => $block
    );
    drupal_static('blockexpose', $blockexpose);
    // Unset content to prevent this block from being displayed.
    $data['content'] = '';
  }
}

/**
 * Implementation of hook_page_alter()
 * 
 * Note, this adds blocks to the content region, as we can be certain that
 * the content region will be present in all themes.
 */
function blockexpose_page_alter(&$page){
  $blockexpose = &drupal_static('blockexpose', array());
  $settings_side = variable_get('display_as_tab_side', array());
  foreach($blockexpose as $block){
    $data = $block['data'];
    $data['leftorright'] = isset($settings_side[$block['block']->module][$block['block']->delta]) ? $settings_side[$block['block']->module][$block['block']->delta] : 'right';
    $page['content']['blockexpose'][]['#markup'] = theme('blockexpose', $data);
  }
}

/**
 * Theme function to add JS
 */
function theme_blockexpose($data){
  drupal_add_js(drupal_get_path('module', 'blockexpose') . '/js/blockexpose.js');
  drupal_add_css(drupal_get_path('module', 'blockexpose') . '/css/blockexpose.css');
  if(isset($data['content']) && isset($data['subject'])){
    // Get the number of this tab for the side.
    $side_number = &drupal_static('blockexpose_'.$data['leftorright'], 0);
    $side_number ++;
    drupal_static('blockexpose_'.$data['leftorright'], $side_number);
    $subject = $data['subject'];
    if(is_array($data['content'])){
      $block_html = drupal_render($data);
    }else{
      $block_html = $data['content'];
    }
    return '<div class="blockexpose '.$data['leftorright'].' side-number-'.$side_number.'">
    <div class="content">
      <div class="open-close">
        <p>' . $subject . '</p>
      </div>
      <div class="subcontent">
      	' . $block_html . '
      </div>
    </div>
  </div>';
  }
  return '';
}