<?php

/**
 * Simple Google Maps v3 API module file.
 * 
 * Includes code from http://www.mistechko.sumy.ua/jscript/google/map/
 * 
 */
/**
 * Implementation of hook_library().
 * 
 * Note, the sensor option could be set to true here to allow for maps to have 
 * the sensor enabled (useful perhaps on mobile devices, or shopping sites).
 */
function gm3_library(){
  return array(
    'gm3' => array(
      'title' => t('Google Maps Javascript API V3'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . '/js/gm3.js'
        ),
        array(
          'data' => 'http://maps.googleapis.com/maps/api/js?sensor=false',
          'options' => 'external'
        )
      ),
      'css' => array(
        array(
          'data' => 'http://code.google.com/apis/maps/documentation/javascript/examples/default.css'
        )
      )
    ),
    // Enable drawing of Polygons.
    'gm3.polygon' => array(
      'title' => t('Google Maps Javascript API V3: Polygon drawing'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . '/js/gm3.polygon.lib.js'
        ),
        array(
          'data' => drupal_get_path('module', 'gm3') . '/js/gm3.polygon.js'
        ),
        array(
          'data' => array(
            'gm3' => array(
              'settings' => array(
                'images' => array(
                  'ghostvertex' => file_create_url(drupal_get_path('module', 'gm3') . '/images/ghostVertex.png'),
                  'ghostvertexover' => file_create_url(drupal_get_path('module', 'gm3') . '/images/ghostVertexOver.png'),
                  'vertex' => file_create_url(drupal_get_path('module', 'gm3') . '/images/vertex.png'),
                  'vertexover' => file_create_url(drupal_get_path('module', 'gm3') . '/images/vertexOver.png')
                )
              )
            )
          ),
          'type' => 'setting'
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        ),
        array(
          'gm3',
          'gm3.geometry'
        )
      )
    ),
    // Enable the drawing of Lines.
    'gm3.polyline' => array(
      'title' => t('Google Maps Javascript API V3: Polygon drawing'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . '/js/gm3.polyline.js'
        ),
        array(
          'data' => array(
            'gm3' => array(
              'settings' => array(
                'images' => array(
                  'ghostvertex' => file_create_url(drupal_get_path('module', 'gm3') . '/images/ghostVertex.png'),
                  'ghostvertexover' => file_create_url(drupal_get_path('module', 'gm3') . '/images/ghostVertexOver.png'),
                  'vertex' => file_create_url(drupal_get_path('module', 'gm3') . '/images/vertex.png'),
                  'vertexover' => file_create_url(drupal_get_path('module', 'gm3') . '/images/vertexOver.png')
                )
              )
            )
          ),
          'type' => 'setting'
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        ),
        array(
          'gm3',
          'gm3.geometry'
        )
      )
    ),
    // Google geometry library
    'gm3.geometry' => array(
      'title' => t('Google Maps Javascript API V3: Geometry library'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => 'http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false',
          'options' => 'external'
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        )
      )
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function gm3_theme(){
  return array(
    'gm3_map' => array(
      'variables' => array(
        'map' => array(
          'id' => 'gm3-map'
        )
      ),
      'file' => 'gm3.theme.inc'
    )
  );
}

/**
 * Implementation of hook_menu().
 */
function gm3_menu(){
  return array(
    'gm3_test' => array(
      'title' => 'GM3 Test',
      'page callback' => 'gm3_test',
      'access arguments' => array(
        'access content'
      ),
      'type' => MENU_CALLBACK
    )
  );
}

/**
 * Callback for testing.
 */
function gm3_test(){
  return theme('gm3_map', array(
    'map' => array(
      'libraries' => array(
        'polygon'
      )
    )
  ));
}

/**
 * Get the default settings.  Note, these vary slightly from Google's default
 * settings, as not all of Google's defaults are appropriate for the intended
 * uses of the GM3 module.  The following changes have been made:
 * 
 * center: Now centered on Europe.
 * backgroundColor: white
 * mapTypeId: google.maps.MapTypeId.TERRAIN
 * panControl: false
 * scaleControl: false
 * streetViewControl: false
 */
function gm3_settings(){
  return variable_get('gm3_default_settings', array(
    'width' => '100%',
    'height' => '500px',
    'center' => array(
      'latitude' => 52,
      'longitude' => 0
    ),
    //'backgroundColor' => 'white',
    'disableDefaultUI' => FALSE,
    'disableDoubleClickZoom' => FALSE,
    'draggable' => TRUE,
    'draggableCursor' => 'move',
    'draggingCursor' => 'move',
    'heading' => 0,
    'keyboardShortcuts' => TRUE,
    'mapTypeControl' => TRUE,
    'mapTypeControlOptions' => array(
      'mapTypeIds' => array(
        'google.maps.MapTypeId.HYBRID',
        'google.maps.MapTypeId.ROADMAP',
        'google.maps.MapTypeId.SATELLITE',
        'google.maps.MapTypeId.TERRAIN'
      ),
      'style' => 'google.maps.MapTypeControlStyle.HORIZONTAL_BAR', // http://code.google.com/apis/maps/documentation/javascript/reference.html#MapTypeControlStyle*/
      'position' => 'google.maps.ControlPosition.TOP_RIGHT' // http://code.google.com/apis/maps/documentation/javascript/reference.html#ControlPosition
    ),
    'mapTypeId' => 'google.maps.MapTypeId.TERRAIN', // SATELLITE, TERRAIN, ROADMAP, HYBRID
    'maxZoom' => null,
    'minZoom' => null,
    'noClear' => FALSE,
    'overviewMapControl' => FALSE,
    'overviewMapControlOptions' => array(
      'opened' => TRUE
    ),
    'panControl' => FALSE,
    'panControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT'
    ),
    'rotateControl' => TRUE,
    'rotateControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT'
    ),
    'scaleControl' => FALSE,
    'scaleControlOptions' => array(
      'position' => 'google.maps.ControlPosition.BOTTOM_LEFT',
      'style' => 'google.maps.ScaleControlStyle.DEFAULT'
    ),
    'scrollwheel' => TRUE,
    // 'streeView' => '', // This appears to be more complicated than we require
    // if users would like this, then they can add it!
    'streetViewControl' => FALSE,
    'streetViewControlOptions' => array(
      'position' => ''
    ),
    // 'styles' => '', // Deliberately left blank.  This may be tweaked in the
    // future.
    'tilt' => 0,
    'zoom' => 4,
    'zoomControl' => TRUE,
    'zoomControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT',
      'style' => 'google.maps.ZoomControlStyle.DEFAULT'
    )
  ));
}

/**
 * Implementation of hook_gm3_settings_alter().
 * 
 * TESTING.
 */
function gm3_gm3_map_alter($map){
  return $map;
}