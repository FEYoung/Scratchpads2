<?php

/**
 * Simple Google Maps v3 API module file.
 * 
 * Includes code from http://www.mistechko.sumy.ua/jscript/google/map/
 * 
 */
/**
 * Implementation of hook_library().
 * 
 * Note, the sensor option could be set to true here to allow for maps to have 
 * the sensor enabled (useful perhaps on mobile devices, or shopping sites).
 * 
 * Note.
 * FIXME - Adding the Google geometry class currently breaks Polygon & Polyline.
 * Removed the following from dependencies for both gm3.polygon and gm3.polyline
 * array(
 * 'gm3',
 * 'gm3.geometry'
 * )
 * 
 * FIXME - Select countries.  Click on a region could bring up an option to 
 * select the subregions (TDWG 4).
 */
function gm3_library(){
  // Whether or not to use the minified versions of the code.
  $min = variable_get('gm3_use_minified', false) ? '.min' : '';
  return array(
    'gm3' => array(
      'title' => t('Google Maps Javascript API V3'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/',
      'version' => '3',
      'js' => array(
        array(
          'data' => 'http://maps.googleapis.com/maps/api/js?sensor=false',
          'options' => 'external'
        ),
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.getClass$min.js"
        ),
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3$min.js"
        ),
        array(
          'data' => array(
            'gm3' => array(
              'settings' => array(
                'images' => array(
                  'sprite' => file_create_url(drupal_get_path('module', 'gm3') . '/images/sprite.png')
                )
              )
            )
          ),
          'type' => 'setting'
        )
      ),
      'css' => array(
        array(
          'data' => 'http://code.google.com/apis/maps/documentation/javascript/examples/default.css'
        )
      )
    ),
    // Fancy info bubbles
    'gm3.infobubble' => array(
      'title' => t('Google Info Bubble'),
      'website' => '',
      'version' => 1,
      'js' => array(
        array(
          'data' => 'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobubble/src/infobubble.js',
          'options' => 'external'
        )
      )
    ),
    // Marker clusterer
    'gm3.clusterer' => array(
      'title' => t('Google Marker Cluster'),
      'website' => 'http://google-maps-utility-library-v3.googlecode.com/',
      'version' => '2.0.5',
      'js' => array(
        array(
          'data' => 'http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.5/src/markerclusterer.js',
          'options' => 'external'
        )
      )
    ),
    // Convex hull
    // NOTE - This is not currently working, DO NOT USE!
    'gm3.convexhull' => array(
      'title' => t('Google Convex Hull'),
      'website' => 'http://www.geocodezip.com/map-markers_ConvexHull_Polygon.asp',
      'version' => '1',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.convexhull$min.js"
        )
      )
    ),
    // Google geometry library
    'gm3.geocoder' => array(
      'title' => t('Google Maps Javascript API V3: Geocoder library'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => 'http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false',
          'options' => 'external'
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        )
      )
    ),
    // Enable the clicking of points.
    'gm3.point' => array(
      'title' => t('Google Maps Javascript API V3: Point drawing'),
      'website' => 'http://code.google.com/apis/maps/',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.point$min.js"
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        ),
        array(
          'gm3',
          'gm3.clusterer'
        ),
        array(
          'gm3',
          'gm3.infobubble'
        )
      )
    ),
    // Enable drawing of Polygons.
    'gm3.polygon' => array(
      'title' => t('Google Maps Javascript API V3: Polygon drawing'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.polygon.lib$min.js"
        ),
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.polygon$min.js"
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        ),
        array(
          'gm3',
          'gm3.infobubble'
        )
      )
    ),
    // Enable the drawing of Lines.
    'gm3.polyline' => array(
      'title' => t('Google Maps Javascript API V3: Polygon drawing'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.polyline.lib$min.js"
        ),
        array(
          'data' => drupal_get_path('module', 'gm3') . "/js/gm3.polyline$min.js"
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        ),
        array(
          'gm3',
          'gm3.infobubble'
        )
      )
    ),
    // Google geometry library
    'gm3.geometry' => array(
      'title' => t('Google Maps Javascript API V3: Geometry library'),
      'website' => 'http://code.google.com/apis/maps/documentation/javascript/geometry.html',
      'version' => '3',
      'js' => array(
        array(
          'data' => 'http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false',
          'options' => 'external'
        )
      ),
      'dependencies' => array(
        array(
          'gm3',
          'gm3'
        )
      )
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function gm3_theme(){
  return array(
    'gm3_map' => array(
      'variables' => array(
        'map' => array(
          'id' => 'gm3-map'
        )
      ),
      'file' => 'gm3.theme.inc'
    ),
    'gm3_point_button' => array(
      'variables' => array(
        'id' => 'gm3-map'
      ),
      'file' => 'gm3.theme.inc'
    ),
    'gm3_polygon_button' => array(
      'variables' => array(
        'id' => 'gm3-map'
      ),
      'file' => 'gm3.theme.inc'
    ),
    'gm3_polyline_button' => array(
      'variables' => array(
        'id' => 'gm3-map'
      ),
      'file' => 'gm3.theme.inc'
    )
  );
}

/**
 * Implementation of hook_menu().
 */
function gm3_menu(){
  return array(
    'gm3_test' => array(
      'title' => 'GM3 Test',
      'page callback' => 'gm3_test',
      'access arguments' => array(
        'access content'
      ),
      'type' => MENU_CALLBACK
    )
  );
}

/**
 * Callback for testing.
 */
function gm3_test(){
  // FIXME - Testing with points!
  $points1 = array(
    array(
      'lat' => 10,
      'long' => 20,
      'content' => 'Stuff 10,20'
    ),
    array(
      'lat' => 50.5,
      'long' => 0,
      'content' => '<h1>London?</h1>Stuff 48,0'
    ),
    array(
      'lat' => 20,
      'long' => 20,
      'content' => 'Stuff 20,20'
    ),
    array(
      'lat' => 30,
      'long' => 22,
      'content' => 'Stuff 30,22'
    )
  );
  $points2 = array();
  for($i = 0; $i < 1000; $i++){
    $points2[] = array(
      'content' => 'Contenty',
      'title' => 'Stuff',
      'lat' => round(mt_rand(51000, 52000)) / 1000,
      'long' => round(mt_rand(-500, 500)) / 1000
    );
  }
  // FIXME - END!
  return theme('gm3_map', array(
    'map' => array(
      'id' => 'map1',
      'libraries' => array(
        'point' => array(
          'points' => $points2
        ),
        'polygon' => array(
          'polygons' => array(
            $points1
          )
        ),
        'polyline' => array(
          'polylines' => array(
            array(
              array(
                'lat' => -40,
                'long' => -40
              ),
              array(
                'lat' => 40,
                'long' => 40
              )
            )
          )
        ),
        'region' => array(
          'module' => 'gm3_region',
          'regions' => array(
            'countries' => array(
              'uk'
            ),
            'level1' => array(
              'EUROPE'
            ),
            'level4' => array(
              'LEE-AB',
              'TCS-AB',
              'BZN-AC',
              'WAU-AC',
              'TCS-AD',
              'LEE-AG',
              'MXE-AG',
              'CHS-AH',
              'CLS-AI',
              'BZE-AL',
              'BZN-AM',
              'AND-AN',
              'CLN-AN',
              'GGI-AN',
              'SPA-AN',
              'BZN-AP',
              'EHM-AP',
              'IND-AP',
              'TCS-AR',
              'ASS-AS',
              'SAM-AS',
              'CLN-AT',
              'AUT-AU',
              'LEE-AV',
              'TCS-AZ',
              'AGE-BA',
              'BZE-BA',
              'GST-BA',
              'LSI-BA',
              'WIN-BA',
              'MXN-BC',
              'BGM-BE',
              'EHM-BH',
              'YUG-BH',
              'CLC-BI',
              'GGI-BI',
              'IND-BI',
              'CHN-BJ',
              'NLA-BO',
              'BOR-BR',
              'MXN-BS',
              'LEE-BV',
              'AGW-CA',
              'MXT-CA',
              'AGS-CB',
              'SWC-CC',
              'BZE-CE',
              'AGE-CH',
              'IND-CH',
              'NCS-CH',
              'FRA-CI',
              'MXT-CI',
              'CPI-CL',
              'MXS-CL',
              'AGE-CN',
              'AGE-CO',
              'AND-CO',
              'CLC-CO'
            )
          )
        )
      )
    )
  ));
}

/**
 * Get the default settings.  Note, these vary slightly from Google's default
 * settings, as not all of Google's defaults are appropriate for the intended
 * uses of the GM3 module.  The following changes have been made:
 * 
 * center: Now centered on Europe.
 * backgroundColor: white
 * mapTypeId: google.maps.MapTypeId.TERRAIN
 * panControl: false
 * scaleControl: false
 * streetViewControl: false
 */
function gm3_settings(){
  return variable_get('gm3_default_settings', array(
    'width' => '100%',
    'height' => '500px',
    'center' => array(
      'latitude' => 52,
      'longitude' => 0
    ),
    //'backgroundColor' => 'white',
    'disableDefaultUI' => FALSE,
    'disableDoubleClickZoom' => FALSE,
    'draggable' => TRUE,
    'draggableCursor' => 'move',
    'draggingCursor' => 'move',
    'heading' => 0,
    'keyboardShortcuts' => TRUE,
    'mapTypeControl' => TRUE,
    'mapTypeControlOptions' => array(
      'mapTypeIds' => array(
        'google.maps.MapTypeId.HYBRID',
        'google.maps.MapTypeId.ROADMAP',
        'google.maps.MapTypeId.SATELLITE',
        'google.maps.MapTypeId.TERRAIN'
      ),
      'style' => 'google.maps.MapTypeControlStyle.DEFAULT', // http://code.google.com/apis/maps/documentation/javascript/reference.html#MapTypeControlStyle
      'position' => 'google.maps.ControlPosition.TOP_RIGHT' // http://code.google.com/apis/maps/documentation/javascript/reference.html#ControlPosition
    ),
    'mapTypeId' => 'google.maps.MapTypeId.TERRAIN', // SATELLITE, TERRAIN, ROADMAP, HYBRID
    'maxZoom' => null,
    'minZoom' => 2,
    'noClear' => FALSE,
    'overviewMapControl' => FALSE,
    'overviewMapControlOptions' => array(
      'opened' => TRUE
    ),
    'panControl' => FALSE,
    'panControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT'
    ),
    'rotateControl' => TRUE,
    'rotateControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT'
    ),
    'scaleControl' => FALSE,
    'scaleControlOptions' => array(
      'position' => 'google.maps.ControlPosition.BOTTOM_LEFT',
      'style' => 'google.maps.ScaleControlStyle.DEFAULT'
    ),
    'scrollwheel' => TRUE,
    // 'streeView' => '', // This appears to be more complicated than we require
    // if users would like this, then they can add it!
    'streetViewControl' => FALSE,
    'streetViewControlOptions' => array(
      'position' => ''
    ),
    // 'styles' => '', // Deliberately left blank.  This may be tweaked in the
    // future.
    'tilt' => 0,
    'zoom' => 4,
    'zoomControl' => TRUE,
    'zoomControlOptions' => array(
      'position' => 'google.maps.ControlPosition.TOP_LEFT',
      'style' => 'google.maps.ZoomControlStyle.DEFAULT'
    )
  ));
}

/**
 * Implementation of hook_gm3_settings_alter().
 */
function gm3_gm3_map_alter(&$map){
  if(isset($map['libraries'])){
    foreach($map['libraries'] as $id => $library){
      $library_name = $library;
      if(is_array($library)){
        $library_name = $id;
      }
      switch($library_name){
        case 'polygon':
          $map['tools'][] = theme('gm3_polygon_button', array(
            'id' => $map['id']
          ));
          break;
        case 'polyline':
          $map['tools'][] = theme('gm3_polyline_button', array(
            'id' => $map['id']
          ));
          break;
        case 'point':
          $map['tools'][] = theme('gm3_point_button', array(
            'id' => $map['id']
          ));
          break;
        default:
          break;
      }
    }
  }
}