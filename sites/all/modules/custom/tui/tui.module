<?php

/**
 * Implementation of hook_menu().
 */
function tui_menu(){
  return array(
    'admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/hierarchy/callback/%taxonomy_term' => array(
      'title' => 'TUI callback',
      'page callback' => 'tui_hierarchy_page_callback',
      'page arguments' => array(
        3,
        6
      ),
      'access arguments' => array(
        'administer taxonomy'
      ),
      'type' => MENU_CALLBACK,
      'file' => 'tui.admin.inc'
    ),
    'admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/hierarchy/form_callback/%taxonomy_term' => array(
      'title' => 'TUI form callback',
      'page callback' => 'tui_form_callback',
      'page arguments' => array(
        3,
        6
      ),
      'access callback' => 'taxonomy_term_edit_access',
      'access arguments' => array(
        6
      ),
      'type' => MENU_CALLBACK,
      'file' => 'tui.admin.inc'
    )
  );
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function tui_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id){
  $form['actions']['submit']['#ajax'] = array(
    'callback' => 'tui_term_submit'
  );
}

/**
 * Callback function for submitting the term form
 */
function tui_term_submit($form, &$form_state){
  module_load_include('admin.inc', 'taxonomy');
  taxonomy_form_term_submit($form, $form_state);
  return 'Shit yeah';
}

/**
 * Implementation of hook_menu_alter()
 */
function tui_menu_alter(&$items){
  // Change the add term page so that the link does not appear on the list terms
  // or TUI page.
  // TODO - Should we also hide the "Add Term" tab and instead link to the
  // taxonomy editor.
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/add']['type'] = 132;
  // Change the "list terms" page to use the taxonomy editor instead.
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['page callback'] = 'tui_hierarchy_page';
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['page arguments'] = array(
    3
  );
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['file'] = 'tui.admin.inc';
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['module'] = 'tui';
}

/**
 * Implementation of hook_help()
 */
function tui_help($path, $arg){
  switch($path){
    case 'admin/structure/taxonomy/%':
      $vocabulary = taxonomy_vocabulary_machine_name_load($arg[3]);
      return '<h1>' . t('Taxonomy User Interface') . '</h1>' . '<p>' . t('Clicking on a term from the taxonomy browser on the left, will bring up a form here.  This form will be identical to the standard term edit form, but with the addition of tabs.') . '</p>' . '<p>' . t('Terms can be moved in the tree by simply dragging and dropping.  Click the mouse on a term, ensuring you hold down the button, and then move it to where you would like the term.') . ' ' . t('When moving a name, if you drag the term being moved over another term, then the term being moved will become a child of the other term.  If you move the mouse to the left whilst over a term, then term will become a sibling of the other term.') . '</p>' . '<p>' . t('This editor interface is still under development.  Please provide any feedback in the usual way.') . '</p>';
  }
}

/**
 * Implementation of hook_library
 */
function tui_library(){
  return array(
    'ui.nestedSortable' => array(
      'title' => 'jQuery UI: nested Sortable',
      'website' => 'http://mjsarfatti.com/sandbox/nestedSortable/',
      'version' => '1.3.4',
      'js' => array(
        drupal_get_path('module', 'tui') . '/js/jquery.ui.nestedSortable.js' => array()
      ),
      'dependencies' => array(
        array(
          'system',
          'ui.sortable'
        )
      )
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function tui_theme(){
  return array(
    'tui_page' => array(
      'variables' => array(
        'vocabulary' => NULL
      ),
      'file' => 'tui.admin.inc'
    ),
    'tui_branch' => array(
      'variables' => array(
        'vocabulary' => NULL,
        'tid' => NULL,
        'tid' => 0
      ),
      'file' => 'tui.admin.inc'
    ),
    'tui_term' => array(
      'variables' => array(
        'term' => NULL
      ),
      'file' => 'tui.admin.inc'
    )
  );
}