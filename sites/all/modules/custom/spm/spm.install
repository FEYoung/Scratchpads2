<?php

/**
 * Media field should not be required
 */
function spm_update_7001(){
  $instance = field_read_instance('node', 'field_media', 'spm');
  $instance['required'] = 0;
  field_update_instance($instance);
  return 'Updated spm media field';
}

/**
 * Update the description
 */
function spm_update_7002(){
  $instance = field_read_instance('node', 'field_associations', 'spm');
  $instance['description'] = 'Descriptions and lists of taxa that interact with the subject taxon. Includes explicit reference to the kind of ecological interaction: Predator/prey; host/parasite, pollinators, symbiosis, mutualism, commensalism; hybridisation, &hellip;';
  field_update_instance($instance);
  return 'Updated spm field_associations field';
}

/**
 * Change the node_type table to reflect the bug in features.
 */
function spm_update_7003(){
  db_update('node_type')->fields(array(
    'base' => ''
  ))->condition('module', 'spm')->execute();
}

/**
 * Change weight of fields to allow eMonocot fields to fit in nicely
 */
function spm_update_7004(){
  module_load_include('features.field.inc', 'spm');
  $spm_fields = spm_field_default_fields();
  foreach ($spm_fields as $spm_field){
  	$instance = field_read_instance('node', $spm_field['field_config']['field_name'], 'spm');
  	$instance['widget']['weight'] = $spm_field['field_instance']['widget']['weight'];
  	$instance['display']['default']['weight'] = $spm_field['field_instance']['display']['default']['weight'];
  	field_update_instance($instance);
  }
}

/**
 * Update the spm instance of the field_media field to alter its display. 
 */
function spm_update_7005(){
  $field_instance = field_info_instance('node', 'field_media', 'spm');
  $field_instance['display'] = array(
    'default' => array(
      'label' => 'above',
      'module' => 'file_entity',
      'settings' => array(
        'file_view_mode' => 'file_styles_square_thumbnail'
      ),
      'type' => 'file_rendered',
      'weight' => '12'
    ),
    'linked_node' => array(
      'label' => 'above',
      'settings' => array(),
      'type' => 'hidden',
      'weight' => 1
    ),
    'teaser' => array(
      'label' => 'above',
      'settings' => array(),
      'type' => 'hidden',
      'weight' => 0
    )
  );
  field_update_instance($field_instance);
}