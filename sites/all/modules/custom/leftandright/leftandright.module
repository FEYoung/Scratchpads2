<?php

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function leftandright_form_taxonomy_overview_vocabularies_alter(&$form, &$form_state, $form_id){
  $vocabularies = taxonomy_get_vocabularies();
  foreach($vocabularies as $vocabulary){
    $form[$vocabulary->vid]['rebuildlandr'] = array(
      '#type' => 'link',
      '#title' => t('rebuild tree'),
      '#href' => "admin/structure/taxonomy/$vocabulary->machine_name/rebuild"
    );
  }
  $form['#theme'] = array(
    'leftandright_taxonomy_overview_vocabularies'
  );
}

/**
 * Implementation of hook_theme().
 */
function leftandright_theme(){
  return array(
    'leftandright_taxonomy_overview_vocabularies' => array(
      'render element' => 'form',
      'file' => 'leftandright.theme.inc'
    )
  );
}

/**
 * Implementations of hook_taxonomy_X
 */
function leftandright_taxonomy_term_insert($term){
  // Include the functions file, and do the magic!
  module_load_include('insert.inc', 'leftandright');
  leftandright_insert($term);
}

/**
 * Implementations of hook_taxonomy_X
 */
function leftandright_taxonomy_term_update($term){
  // Simply do a delete, then an insert.
  // Nice if we could start a transaction here, then commit it at the end.
  leftandright_taxonomy_term_delete($term);
  leftandright_taxonomy_term_insert($term);
}

/**
 * Implementations of hook_taxonomy_X
 */
function leftandright_taxonomy_term_delete($term){
  // Get the left and right values first so that we can close up the table.
  $leftandright = db_select('taxonomy_leftandright', 'l')->fields('l', array(
    'lft',
    'rgt'
  ))->condition('tid', $term->tid)->execute()->fetch();
  db_delete('taxonomy_leftandright')->condition('tid', $term->tid)->execute();
  db_query('UPDATE {taxonomy_leftandright} SET lft = lft-2 WHERE lft > :lft', array(
    ':lft' => $leftandright->lft
  ));
  db_query('UPDATE {taxonomy_leftandright} SET rgt = rgt-2 WHERE rgt > :lft', array(
    ':lft' => $leftandright->lft
  ));
}