<?php

/**
 * Implements hook_ctools_plugin_api
 */
function anymals_ctools_plugin_api(){
  list($module, $api) = func_get_args();
  if($module == "feeds" && $api == "feeds_importer_default"){return array(
      "version" => "1"
    );}
}

/**
 * Implements hook_feeds_importer_default().
*/
function anymals_feeds_importer_default(){
  $export = array();
  $feeds_importer = new stdClass();
  $feeds_importer->disabled = FALSE; /* Edit this to true to make a default feeds_importer disabled initially */
  $feeds_importer->api_version = 1;
  $feeds_importer->id = 'anymals_plants';
  $feeds_importer->config = array(
    'name' => 'anymals+plants',
    'description' => 'Periodically import records from the anymals+plants server',
    'fetcher' => array(
      'plugin_key' => 'FeedsHTTPFetcher',
      'config' => array(
        'auto_detect_feeds' => FALSE,
        'use_pubsubhubbub' => FALSE,
        'designated_hub' => '',
        'request_timeout' => NULL
      )
    ),
    'parser' => array(
      'plugin_key' => 'FeedsXPathParserXML',
      'config' => array(
        'sources' => array(
          'xpathparser:0' => 'UnitExtension/SightingForms/form/select1[label="Basis of record"]/inputValue',
          'xpathparser:1' => 'UnitExtension/SightingForms/form/input[label="Catalogue number"]/inputValue',
          'xpathparser:2' => 'UnitExtension/SightingForms/form/input[label="Collection code"]/inputValue',
          'xpathparser:3' => 'UnitExtension/SightingForms/form/input[label="Institution code"]/inputValue'
        ),
        'rawXML' => array(
          'xpathparser:0' => 0,
          'xpathparser:1' => 0,
          'xpathparser:2' => 0,
          'xpathparser:3' => 0
        ),
        'context' => '//DataSets/DataSet[DatasetGUID="87901689-8C9F-44AA-843F-4A05DA55F1C5"]/Units/Unit',
        'exp' => array(
          'errors' => 0,
          'tidy' => 0,
          'tidy_encoding' => 'UTF8',
          'debug' => array(
            'context' => 0,
            'xpathparser:0' => 0,
            'xpathparser:1' => 0,
            'xpathparser:2' => 0,
            'xpathparser:3' => 0
          )
        ),
        'allow_override' => 1
      )
    ),
    'processor' => array(
      'plugin_key' => 'FeedsNodeProcessor',
      'config' => array(
        'expire' => '-1',
        'author' => 0,
        'authorize' => 0,
        'mappings' => array(
          0 => array(
            'source' => 'xpathparser:0',
            'target' => 'field_basis_of_record',
            'unique' => FALSE
          ),
          1 => array(
            'source' => 'xpathparser:1',
            'target' => 'field_catalogue_number',
            'unique' => FALSE
          ),
          2 => array(
            'source' => 'xpathparser:2',
            'target' => 'field_collection_code',
            'unique' => FALSE
          ),
          3 => array(
            'source' => 'xpathparser:3',
            'target' => 'field_institution_code',
            'unique' => FALSE
          )
        ),
        'update_existing' => '2',
        'input_format' => 'plain_text',
        'skip_hash_check' => 0,
        'bundle' => 'specimen_observation'
      )
    ),
    'content_type' => '',
    'update' => 0,
    'import_period' => '86400',
    'expire_period' => 3600,
    'import_on_create' => 1,
    'process_in_background' => 0
  );
  $export['anymals_plants'] = $feeds_importer;
  return $export;
}

/**
 * Implements hook_menu()
 */
function anymals_menu(){
  return array(
    'admin/config/services/anymals' => array(
      'title' => 'anymals+plants configuration',
      'description' => 'Enter your anymals+plants configuration to allow your Scratchpad to "talk" to the anymals+plants service.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'anymals_configuration_form'
      ),
      'file' => 'anymals.pages.inc',
      'access arguments' => array(
        'administer anymals'
      )
    )
  );
}

/**
 * Implements hook_permission()
 */
function anymals_permission(){
  return array(
    'administer anymals' => array(
      'title' => t('Administer anymals+plants'),
      'description' => t('Perform administration tasks for anymals+plants.')
    )
  );
}

/**
 * Implements hook_scratchpads_default_permissions()
 */
function anymals_scratchpads_default_permissions(){
  return array(
    'maintainer' => array(
      'administer anymals'
    )
  );
}

/**
 * Implementation of hook_form_alter().
 */
function anymals_form_node_type_form_alter(&$form, &$form_state){
  $form['#submit'][] = 'anymals_node_type_form_submit';
}

/**
 * Submit function for updating the shizzle.
 */
function anymals_node_type_form_submit($form, $form_state){
  if(($anymals_token = variable_get('anymals_token', FALSE)) !== FALSE){
    module_load_include('pages.inc', 'anymals');
    anymals_configuration_form_submit(FALSE, array(
      'values' => array(
        'anymals_token' => $anymals_token,
        'anymals_key' => variable_get('anymals_key', ''),
        'anymals_forms' => array_filter(variable_get('anymals_forms', array()))
      )
    ));
  }
}