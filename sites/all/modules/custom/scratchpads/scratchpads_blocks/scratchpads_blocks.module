<?php
define('SCRATCHPADS_THEME_NAME', 'scratchpads');
define('TOGGLE_PLACEHOLDER_SESSION', 'show_placeholder_blocks');

/**
 * Implements hook_menu().
 */
function scratchpads_blocks_menu(){
  // Add the empty content toggle
  // TODO - Do we need this on any other pages?
  $items['taxonomy/term/%/toggle-placeholder-blocks'] = array(
    'title' => 'Toggle placeholder blocks',
    'page callback' => 'scratchpads_blocks_toggle_placeholder',
    'page arguments' => array(
      2
    ),
    'access arguments' => array(
      'toggle placeholder blocks'
    ),
    'weight' => 10,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE
  );
  return $items;
}

/**
 * Implementation of hook_permission().
 */
function scratchpads_blocks_permission(){
  return array(
    'toggle placeholder blocks' => array(
      'title' => t('toggle placeholder blocks'),
      'description' => t('Allows user to turn on & off placeholder blocks.')
    )
  );
}

/**
 * Implements hook_block_info().
 */
function scratchpads_blocks_block_info(){
  $blocks['footer_menu'] = array(
    'info' => t('Scratchpads footer menu'),
    'region' => 'footer',
    'weight' => 1,
    'theme' => SCRATCHPADS_THEME_NAME,
    'status' => 1
  );
  $blocks['footer_logos'] = array(
    'info' => t('Scratchpads footer logos'),
    'region' => 'footer',
    'weight' => 2,
    'theme' => SCRATCHPADS_THEME_NAME,
    'status' => 1
  );
//  $blocks['footer_links'] = array(
//    'info' => t('Scratchpads footer links'),
//    'region' => 'footer',
//    'weight' => 3,
//    'theme' => SCRATCHPADS_THEME_NAME,
//    'status' => 1
//  );
  return $blocks;
}

/**
 * Implementation of hook_system_info_alter().
 * 
 * We tweak the seven theme so that we can assign blocks automatically to the
 * "scratchpads" theme regions without Drupal being fucking stupid.
 */
function scratchpads_blocks_system_info_alter(&$info, $file, $type){
  if($file->name == 'seven'){
    $info['regions']['page_top'] = 'Page Top';
    $info['regions']['page_bottom'] = 'Page Bottom';
    $info['regions']['slide_top'] = 'Slide Top';
    $info['regions']['content'] = 'Main content';
    $info['regions']['sidebar'] = 'Sidebar';
    $info['regions']['footer'] = 'Footer';
    $info['regions']['slide_bottom'] = 'Slide Bottom';
    $info['regions']['branding'] = 'Branding';
    $info['regions']['menu'] = 'Menu';
    $info['regions']['header'] = 'Header';
  }
}

/**
 * 
 * Implentation of hook_block_info_alter
 * Adjust the blocks for this theme
 * @param array $blocks
 * @param string $theme
 * @param array $code_blocks
 */
function scratchpads_blocks_block_info_alter(&$blocks, $theme, $code_blocks){
  switch($theme){
    case SCRATCHPADS_THEME_NAME:
      // Turn of all the blocks we know we don't want
      $blocks['system']['powered-by']['status'] = 0;
      $blocks['system']['navigation']['status'] = 0;
      $blocks['system']['user-menu']['status'] = 0;
      // Move the search box to the top
      $blocks['search']['form']['region'] = 'header';
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function scratchpads_blocks_block_view($delta = ''){
  $block = array();
  switch($delta){
    case 'footer_menu':
      $tree = menu_tree_page_data('main-menu', 1);
      $block['content'] = menu_tree_output($tree);
      break;
    case 'footer_logos':
      $path = drupal_get_path('module', 'scratchpads_blocks');
      $options = array(
        'html' => true,
        'absolute' => true
      );
      $links = array(
        l(theme('image', array(
          'path' => $path . '/images/vbrant.png',
          'alt' => 'ViBRANT logo',
          'title' => 'ViBRANT'
        )), 'http://vbrant.eu/', $options),
        l(theme('image', array(
          'path' => $path . '/images/drupal_small.png',
          'alt' => 'Drupal logo',
          'title' => 'Built with Drupal'
        )), 'http://drupal.org/', $options),
        l(theme('image', array(
          'path' => $path . '/images/scratchpads.png',
          'alt' => 'Scratchpads logo',
          'title' => 'Scratchpads'
        )), 'http://scratchpads.eu/', $options)
      );
      $block['content'] = array(
        '#theme' => 'item_list',
        '#items' => $links
      );
      break;
//    case 'footer_links':
//      $block['content'] = l('Other scratchpads', '/scratchpads');
//      break;
  }
  return $block;
}

/**
 * Implements hook_menu_block_blocks().
 */
function scratchpads_blocks_menu_block_blocks(){
  // The array key is the block delta used by menu block.
  return array(
    'scratchpads_blocks-1' => array(
      'menu_name' => 'main-menu',
      'parent_mlid' => 0,
      'title_link' => 0,
      'admin_title' => 'Secondary menu',
      'level' => 2,
      'follow' => 0,
      'depth' => 0,
      'expanded' => 1,
      'sort' => 0
    )
  );
}

/**
 * Implements hook_themes_enabled().
 */
function scratchpads_blocks_themes_enabled($theme_list){
  foreach(module_implements('block_info') as $module){
    $module_blocks = module_invoke($module, 'block_info');
    foreach($module_blocks as $delta => $block){
      if(isset($block['theme']) && in_array($block['theme'], $theme_list)){
        if($db_block = scratchpads_blocks_block_load($module, $delta)){
          $db_block->status = 1;
          $db_block->region = $block['region'];
          drupal_write_record('block', $db_block, array(
            'bid'
          ));
        }
      }
    }
  }
}

/*********************************************************************************************
 * 
 * MENU CALLBACKS
 * 
 ********************************************************************************************/
/**
 * Implements hook_views_pre_view().
 */
function scratchpads_blocks_views_pre_view(&$view, &$display_id, &$args){
  if(scratchpads_blocks_show_placeholders() && $display_id == 'block'){
    $filters = $view->get_items('filter');
    // If there's one node type filter set, we know how to create the add link
    if(isset($filters['type']) && count($filters['type']['value']) == 1){
      $type = array_shift($filters['type']['value']);
      $term = taxonomy_term_load(arg(2));
      switch($filters['type']['table']){
        case 'node':
          $node_type = node_type_load($type);
          $link = l(t('Add !node_type', array(
            '!node_type' => $node_type->name
          )), 'node/add/' . $type, array(
            'query' => array(
              'edit[field_taxonomic_name][und]' => $term->name,
              'destination' => 'taxonomy/term/' . $term->tid
            )
          ));
          break;
        case 'file_managed':
          $link = l(t("Add files"), 'admin/content/file');
          break;
      }
      if(isset($link)){
        $settings = array(
          'area' => array(
            'id' => 'area',
            'table' => 'views',
            'field' => 'area',
            'content' => $link
          )
        );
        $view->display_handler->set_option('empty', $settings);
      }
    }
  }
}

/*********************************************************************************************
 * 
 * MENU CALLBACKS
 * 
 ********************************************************************************************/
function scratchpads_blocks_toggle_placeholder($term){
  if(!scratchpads_blocks_show_placeholders()){
    $_SESSION[TOGGLE_PLACEHOLDER_SESSION] = TRUE;
    drupal_set_message(t('You have turned on the display of empty blocks.'));
  }else{
    $_SESSION[TOGGLE_PLACEHOLDER_SESSION] = FALSE;
    drupal_set_message(t('You have turned off the display of empty blocks.'));
  }
  // Return to the original page
  drupal_goto(drupal_get_destination());
}

/*********************************************************************************************
 * 
 * MODULE FUNCTIONS
 * 
 ********************************************************************************************/
function scratchpads_blocks_block_load($module, $delta){
  return db_query('SELECT * FROM {block} WHERE module = :module AND delta = :delta AND theme = :theme', array(
    ':module' => $module,
    ':delta' => $delta,
    ':theme' => SCRATCHPADS_THEME_NAME
  ))->fetchObject();
}

function scratchpads_blocks_show_placeholders(){
  if(!isset($_SESSION[TOGGLE_PLACEHOLDER_SESSION]) || !$_SESSION[TOGGLE_PLACEHOLDER_SESSION]){return false;}
  return true;
}


