<?php

/**
 * Implementation of hook_form_FORM_ID_alter.
 * 
 * Hide the forums vocabulary from the taxonomy editor.
 */
function scratchpads_tweaks_form_taxonomy_overview_vocabularies_alter(&$form, &$form_state, $form_id){
  if($tid = variable_get('forum_nav_vocabulary', FALSE)){
    unset($form[$tid]);
  }
}

/**
 * Implementation of hook_form_alter()
 */
function scratchpads_tweaks_form_alter(&$form, &$form_state, $form_id){
  if(substr($form_id, 0, 8) == 'comment_'){
    if(@isset($form['comment_body'][LANGUAGE_NONE])){
      $form['comment_body'][LANGUAGE_NONE]['#after_build'][] = 'scratchpads_tweaks_comment_body_after_build';
    }
  }
}

function scratchpads_tweaks_comment_body_after_build($element, &$form_state){
  unset($element[0]['format']['format']['#options']['filtered_html']);
  return $element;
}

/**
 * Translate a check plained string.  This should add back <em> tags.
 */
function scratchpads_tweaks_translate_after_check_plain($string){
  return strtr($string, array(
    '[i]' => '<em>',
    '[em]' => '<em>',
    '[/i]' => '</em>',
    '[/em]' => '</em>',
    '&lt;i&gt;' => '<em>',
    '&lt;em&gt;' => '<em>',
    '&lt;/i&gt;' => '</em>',
    '&lt;/em&gt;' => '</em>'
  ));
}

/**
 * Implements hook_menu_alter().
 */
function scratchpads_tweaks_menu_alter(&$items){
  if(isset($items['node/%node/clone'])){
    $items['node/%node/clone']['title'] = t('Clone');
    $items['node/%node/clone']['type'] = MENU_LOCAL_TASK;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function scratchpads_tweaks_form_user_profile_form_alter(&$form, &$form_state, $form_id){
  if(isset($form['account']) && isset($form['account']['roles'])){
    $form['account']['roles']['#description'] = theme('item_list', array(
      'items' => array(
        'Authenticated user: Able to create and edit own forum posts',
        'Contributor: Able to create content and edit own content',
        'Editor: Able to create and edit own content, and also edit other people\'s content',
        'Maintainer: Like editor, but also has administration privileges'
      )
    ));
  }
}

/**
 * Alter default views defined by other modules.
 *
 * This hook is called right before all default views are cached to the
 * database. It takes a keyed array of views by reference.
 *
 * Example usage to add a field to a view:
 * @code
 * $handler =& $view->display['DISPLAY_ID']->handler;
 * // Add the user name field to the view.
 * $handler->display->display_options['fields']['name']['id'] = 'name';
 * $handler->display->display_options['fields']['name']['table'] = 'users';
 * $handler->display->display_options['fields']['name']['field'] = 'name';
 * $handler->display->display_options['fields']['name']['label'] = 'Author';
 * $handler->display->display_options['fields']['name']['link_to_user'] = 1;
 * @endcode
 */
function scratchpads_tweaks_views_default_views_alter(&$views){
  if(isset($views['feeds_log'])){
    unset($views['feeds_log']);
  }
}

function scratchpads_tweaks_form_user_register_form_alter(&$form, &$form_state, $form_id){
  scratchpads_tweaks_form_user_profile_form_alter($form, $form_state, $form_id);
}

/**
 * Implements hook_system_info_alter().
 */
function scratchpads_tweaks_system_info_alter(&$info, $file, $type){
  switch($file->name){
    case 'scratchpads_tweaks':
      // Unset the dependencies of the scratchpads module so that other modules
      // can be disabled (e.g. EOL taxon page data).
      unset($info['dependencies']);
      break;
    case 'webform':
      $info['tool'] = TRUE;
      $info['name'] = 'Webforms';
      $info['description'] = 'Enables the creation of simple online forms. Useful for questionnaires, conference signup, polls, and much more.';
      break;
    case 'views_ui':
      $info['tool'] = TRUE;
      $info['name'] = 'Views';
      $info['description'] = 'Allows you to create custom reports or views of the data held on your Scratchpad';
      break;
    case 'pathauto':
      $info['dependencies'][] = 'redirect';
      $info['tool'] = TRUE;
      $info['name'] = 'Pretty URLs';
      $info['description'] = 'Automatically generates pretty URLs based on the title of the content being edited/created. e.g. A page titled "About this site" will be given the URL content/about-this-site, instead of node/x.';
      break;
    case 'forum':
      $info['tool'] = TRUE;
      $info['dependencies'][] = 'femail';
      break;
    case 'blog':
    case 'simplenews':
    case 'lexicon':
    case 'googleanalytics':
      $info['tool'] = TRUE;
      break;
  }
}

/**
 * Add default body field to a node type.
 * Clone of node_add_body_field() but with weight setting added
 *
 * @param $type
 * A node type object.
 * @param $label
 * The label for the body instance.
 *
 * @return
 * Body field instance.
 */
function scratchpads_tweaks_add_body_field($type, $label = 'Body', $weight = 0){
  // Add or remove the body field, as needed.
  $field = field_info_field('body');
  $instance = field_info_instance('node', 'body', $type->type);
  if(empty($field)){
    $field = array(
      'field_name' => 'body',
      'type' => 'text_with_summary',
      'entity_types' => array(
        'node'
      )
    );
    $field = field_create_field($field);
  }
  if(empty($instance)){
    $instance = array(
      'field_name' => 'body',
      'entity_type' => 'node',
      'bundle' => $type->type,
      'label' => $label,
      'widget' => array(
        'type' => 'text_textarea_with_summary'
      ),
      'settings' => array(
        'display_summary' => TRUE
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight' => $weight
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_summary_or_trimmed',
          'weight' => $weight
        )
      )
    );
    $instance = field_create_instance($instance);
  }
  return $instance;
}
