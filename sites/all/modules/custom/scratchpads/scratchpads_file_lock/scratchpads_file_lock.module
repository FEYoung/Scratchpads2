<?php
/**
 * @file
*  Prevents media files from being deleted when the gallery is deleted.
*/
// Modules have no id, but file_usage want's one.
define("FILE_LOCK_ID", 0);
/*
 * Disable the admin pages for file_lock
 */
function scratchpads_file_lock_menu_alter(&$items){
  $items['admin/config/media/lock']['access callback'] = FALSE;
}

/**
 * Change the order in which the hooks are run.
 */
function scratchpads_file_lock_module_implements_alter(&$implementations, $hook){
  if($hook == 'file_insert'){
    $group = $implementations['scratchpads_file_lock'];
    unset($implementations['scratchpads_file_lock']);
    $implementations['scratchpads_file_lock'] = $group;
  }
}
// Remove file lock for eol files
function scratchpads_file_lock_file_insert($file){
  drupal_register_shutdown_function('scratchpads_file_lock_remove_eolapi_locks');
}

/**
 * Remove EOL API locks
 */
function scratchpads_file_lock_remove_eolapi_locks(){
  $result = db_select('file_managed')->fields('file_managed', array(
    'fid'
  ))->orderBy('fid')->execute();
  foreach($result as $row){
    $file = file_load($row->fid);
    if(scratchpads_file_lock_is_eolapi($file)){
      scratchpads_file_lock_remove_lock($file);
    }
  }
}

/**
 * Remove lock for the $file
 *
 * @param file $file
 *   file object (with at least 'fid' set)
 */
function scratchpads_file_lock_remove_lock($file){
  file_usage_delete($file, 'file_lock', 'FILE_LOCK_ID');
}

/**
 * set lock for $file if not already locked
 *
 * @param file $file
 *   the file to lock
 */
function scratchpads_file_lock_act_on($file){
  // Do not lock temporary files.
  if(empty($file->status)){return;}
  if((!scratchpads_file_lock_is_locked($file)) && (!scratchpads_file_lock_is_eolapi($file))){
    // Only add one lock for every file.
    file_usage_add($file, 'file_lock', 'module', FILE_LOCK_ID);
  }
}

/**
 * Check if a file has already an entry in file_usage for file_lock
 *
 * @param file $file
 *   the file to check
 *
 * @return bool
 *   TRUE if file is locked
 *   FALSE if file is not locked
 */
function scratchpads_file_lock_is_locked($file){
  $file_usage_list = file_usage_list($file);
  return isset($file_usage_list['file_lock']);
}

/**
 * Check if a file is from eolapi
 *
 * @param file $file
 *   the file to check
 *
 * @return bool
 *   TRUE if file is from eolapi
 *   FALSE if file is not from eolapi
 */
function scratchpads_file_lock_is_eolapi($file){
  $file_usage_list = file_usage_list($file);
  return isset($file_usage_list['file']['eolapi']);
}
