<?php

/**
 * Implements hook_scratchpads_solr_info().
 */
function scratchpads_simple_taxonomy_page_scratchpads_solr_info(){
  return array(
    'term' => array(
      'theme' => 'scratchpads_simple_taxonomy_page',
      'empty' => 'scratchpads_simple_taxonomy_page_empty'
    )
  );
}

/**
 * Implements hook_theme().
 */
function scratchpads_simple_taxonomy_page_theme(){
  return array(
    'scratchpads_simple_taxonomy_page' => array(
      'variables' => array(
        'results' => NULL,
        'module' => NULL
      ),
      'file' => 'scratchpads_simple_taxonomy_page.theme.inc'
    ),
    'scratchpads_simple_taxonomy_page_empty' => array(
      'variables' => array(),
      'file' => 'scratchpads_simple_taxonomy_page.theme.inc'
    )
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function scratchpads_simple_taxonomy_page_form_taxonomy_form_vocabulary_alter(&$form, &$form_state, $form_id){
  if(!isset($form_state['confirm_delete'])){
    $vids = variable_get('none_biological_vids', array());
    $form['display_tab'] = array(
      '#title' => t('Display tab'),
      '#description' => t('Check this box to add a menu item linking to this vocabulary.'),
      '#type' => 'checkbox',
      '#default_value' => (isset($form['vid']) && isset($vids[$form['vid']['#value']])) ? $vids[$form['vid']['#value']] : 1,
      '#states' => array(
        'visible' => array(
          ':input[name="biological_classification"]' => array(
            'value' => ''
          )
        )
      )
    );
    // Add an additional submit function so that we can tweak the vocabulary.
    $form['#submit'][] = 'scratchpads_simple_taxonomy_page_taxonomy_form_vocabulary_submit';
  }
}

/**
 * Execute Context page conditions
 *
 * Allows modules to hook into Context's hook_page_build to execute their
 * conditions at an appropriate time before the firing of reactions.
 */
function scratchpads_simple_taxonomy_page_context_page_condition(){
  if(($plugin = context_get_plugin('condition', 'simple_taxonomy_page')) != FALSE && arg(0) == 'term' && is_numeric(arg(1))){
    $plugin->execute(taxonomy_term_load(arg(1)));
  }
}

/**
 * CTools plugin API hook for Context. Note that a proper entry in
 * hook_ctools_plugin_api() must exist for this hook to be called.
 */
function scratchpads_simple_taxonomy_page_context_plugins(){
  $plugins = array();
  $plugins['scratchpads_simple_taxonomy_page_context_condition'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'scratchpads_simple_taxonomy_page'),
      'file' => 'scratchpads_simple_taxonomy_page.context_condition.inc',
      'class' => 'scratchpads_simple_taxonomy_page_context_condition',
      'parent' => 'context_condition'
    )
  );
  return $plugins;
}

/**
 * Implementation of hook_context_registry().
 * Register the context plugins
 */
function scratchpads_simple_taxonomy_page_context_registry(){
  return array(
    'conditions' => array(
      'simple_taxonomy_page' => array(
        'title' => t('Simple taxonomy page'),
        'plugin' => 'scratchpads_simple_taxonomy_page_context_condition'
      )
    )
  );
}

/**
 * Implementation of hook_ctools_plugin_type().
 */
function scratchpads_simple_taxonomy_page_ctools_plugin_type(){
  return array(
    'plugins' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array(
        'handler'
      )
    )
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function scratchpads_simple_taxonomy_page_ctools_plugin_api(){
  list($module, $api) = func_get_args();
  if($module == "context" && $api == "context"){return array(
      "version" => "3"
    );}
}

/**
 * Submit function to set the none_biological_vids variable.
 */
function scratchpads_simple_taxonomy_page_taxonomy_form_vocabulary_submit($form, &$form_state){
  $none_biological_vids = variable_get('none_biological_vids', array());
  foreach($none_biological_vids as $vid => $set){
    if(!taxonomy_vocabulary_load($vid)){
      unset($none_biological_vids[$vid]);
    }
  }
  $none_biological_vids[$form_state['vid']] = $form_state['values']['display_tab'];
  variable_set('none_biological_vids', $none_biological_vids);
  menu_rebuild();
}

/**
 * Implements hook_menu().
 * 
 * Note, PRIMARY_MENU_NAME is defined in the scratchpads_pages.module file, but
 * should be installed/enabled on all sites.
 */
function scratchpads_simple_taxonomy_page_menu(){
  $items = array();
  foreach(variable_get('none_biological_vids', array()) as $vid => $display_tab){
    if($display_tab){
      $vocabulary = taxonomy_vocabulary_load($vid);
      if(($tree = taxonomy_get_tree($vid, 0, 1)) != FALSE){
        $term = array_shift($tree);
        $items['classification/' . $vid] = array(
          'title' => $vocabulary->name,
          'page callback' => 'drupal_goto',
          'page arguments' => array(
            'term/' . $term->tid
          ),
          'access arguments' => array(
            'access content'
          ),
          'menu_name' => PRIMARY_MENU_NAME,
          'weight' => 1
        );
      }
    }
  }
  return $items;
}