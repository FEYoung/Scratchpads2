<?php

/**
 * Implements hook_scratchpads_solr_info().
 */
function scratchpads_simple_taxonomy_page_scratchpads_solr_info(){
  return array(
    'nontaxonomy' => array(
      'theme' => 'scratchpads_simple_taxonomy_page',
      'empty' => 'scratchpads_simple_taxonomy_page_empty'
    )
  );
}

/**
 * Implements hook_theme().
 */
function scratchpads_simple_taxonomy_page_theme(){
  return array(
    'scratchpads_simple_taxonomy_page' => array(
      'variables' => array(
        'results' => NULL,
        'module' => NULL
      ),
      'file' => 'scratchpads_simple_taxonomy_page.theme.inc'
    ),
    'scratchpads_simple_taxonomy_page_empty' => array(
      'variables' => array(),
      'file' => 'scratchpads_simple_taxonomy_page.theme.inc'
    )
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function scratchpads_simple_taxonomy_page_form_taxonomy_form_vocabulary_alter(&$form, &$form_state, $form_id){
  if(!isset($form_state['confirm_delete'])){
    $vids = variable_get('none_biological_vids', array());
    $default_value = 0;
    if(isset($form['vid'])){
      // Vocabulary already exists, default to off
      if(isset($vids[$form['vid']['#value']])){
        // Set before, use the setting.
        $default_value = $vids[$form['vid']['#value']];
      }
    }else{
      // New vocabulary, default to on.
      $default_value = 1;
    }
    $form['display_tab'] = array(
      '#title' => t('Display tab'),
      '#description' => t('Check this box to add a menu item linking to this vocabulary.'),
      '#type' => 'checkbox',
      '#default_value' => $default_value,
      '#states' => array(
        'visible' => array(
          ':input[name="biological_classification"]' => array(
            'value' => ''
          )
        )
      )
    );
    // Add an additional submit function so that we can tweak the vocabulary.
    $form['#submit'][] = 'scratchpads_simple_taxonomy_page_taxonomy_form_vocabulary_submit';
  }
}

/**
 * Implements hook_taxonomy_term_insert()
 */
function scratchpads_simple_taxonomy_page_taxonomy_term_insert($term){
  // If this is a biological classification & there isn't yet a menu item for it, rebuild the menu
  if(!scratchpads_species_term_is_biological_classification($term)){
    $display_tabs = variable_get('none_biological_vids', array());
    if(!menu_get_item('classification/' . $term->vid) && isset($display_tabs[$term->vid]) && $display_tabs[$term->vid]){
      drupal_register_shutdown_function('menu_rebuild');
    }
  }
}

/**
 * Implements hook_taxonomy_term_update()
 */
function scratchpads_simple_taxonomy_page_taxonomy_term_update($term){
  scratchpads_simple_taxonomy_page_taxonomy_term_insert($term);
}

/**
 * Execute Context page conditions
 *
 * Allows modules to hook into Context's hook_page_build to execute their
 * conditions at an appropriate time before the firing of reactions.
 */
function scratchpads_simple_taxonomy_page_context_page_condition(){
  if(($plugin = context_get_plugin('condition', 'scratchpads_simple_taxonomy_page_context_condition')) && arg(0) == 'nontaxonomy'){
    $term = taxonomy_term_load(arg(2));
    if($term){
      $plugin->execute($term);
    }
  }
}

/**
 * CTools plugin API hook for Context. Note that a proper entry in
 * hook_ctools_plugin_api() must exist for this hook to be called.
 */
function scratchpads_simple_taxonomy_page_context_plugins(){
  $plugins = array();
  $plugins['scratchpads_simple_taxonomy_page_context_condition'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'scratchpads_simple_taxonomy_page'),
      'file' => 'scratchpads_simple_taxonomy_page.context_condition.inc',
      'class' => 'scratchpads_simple_taxonomy_page_context_condition',
      'parent' => 'context_condition'
    )
  );
  return $plugins;
}

/**
 * Implementation of hook_context_registry().
 * Register the context plugins
 */
function scratchpads_simple_taxonomy_page_context_registry(){
  return array(
    'conditions' => array(
      'scratchpads_simple_taxonomy_page_context_condition' => array(
        'title' => t('Simple taxonomy page'),
        'plugin' => 'scratchpads_simple_taxonomy_page_context_condition'
      )
    )
  );
}

/**
 * Implementation of hook_ctools_plugin_type().
 */
function scratchpads_simple_taxonomy_page_ctools_plugin_type(){
  return array(
    'plugins' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array(
        'handler'
      )
    )
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function scratchpads_simple_taxonomy_page_ctools_plugin_api(){
  list($module, $api) = func_get_args();
  if($module == "context" && $api == "context"){return array(
      "version" => "3"
    );}
}

/**
 * Submit function to set the none_biological_vids variable.
 */
function scratchpads_simple_taxonomy_page_taxonomy_form_vocabulary_submit($form, &$form_state){
  if(!isset($form_state['confirm_delete']) && isset($form_state['vid'])){
    $none_biological_vids = variable_get('none_biological_vids', array());
    foreach($none_biological_vids as $vid => $set){
      if(!taxonomy_vocabulary_load($vid)){
        unset($none_biological_vids[$vid]);
      }
    }
    $none_biological_vids[$form_state['vid']] = $form_state['values']['display_tab'];
    variable_set('none_biological_vids', $none_biological_vids);
  }
}

/**
 * Implementation of hook_page_alter().
 * 
 * FIXME - We need to check for the presence of a facet filter.
 */
function scratchpads_simple_taxonomy_page_menu_local_tasks_alter(&$data, $router_item, $root_path){
  if($router_item['path'] == 'nontaxonomy/term/%' && $term = taxonomy_term_load(arg(2))){
    if(taxonomy_term_edit_access($term)){
      $data['tabs'][0]['output'][] = array(
        '#theme' => 'menu_local_task',
        '#link' => array(
          'title' => t('Edit'),
          'href' => 'taxonomy/term/' . $term->tid . '/edit',
          'localized_options' => array(
            'attributes' => array(
              'title' => t('Edit this term')
            )
          )
        )
      );
      $data['tabs'][0]['output'][0]['#active'] = TRUE;
      $data['tabs'][0]['count'] = 2;
    }
  }
}

/**
 * Implements hook_menu().
 * 
 * Note, PRIMARY_MENU_NAME is defined in the scratchpads_pages.module file, but
 * should be installed/enabled on all sites.
 */
function scratchpads_simple_taxonomy_page_menu(){
  $items = array();
  foreach(variable_get('none_biological_vids', array()) as $vid => $display_tab){
    if($display_tab){
      $vocabulary = taxonomy_vocabulary_load($vid);
      if(($tree = taxonomy_get_tree($vid, 0, 1)) != FALSE){
        $term = array_shift($tree);
        $items['classification/' . $vid] = array(
          'title' => $vocabulary->name,
          'page callback' => 'drupal_goto',
          'page arguments' => array(
            'nontaxonomy/term/' . $term->tid
          ),
          'access arguments' => array(
            'access content'
          ),
          'menu_name' => PRIMARY_MENU_NAME,
          'weight' => 1
        );
      }
    }
  }
  return $items;
}