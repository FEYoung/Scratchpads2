<?php

/**
 * Implements hook_node_type_insert().
 */
function scratchpads_autotag_node_type_insert($info){
  drupal_register_shutdown_function('_scratchpads_autotag_save_defaults_for_node_type', $info->type);
}

/**
 * Implements hook_node_type_update().
 */
function scratchpads_autotag_node_type_update($info){
  drupal_register_shutdown_function('_scratchpads_autotag_save_defaults_for_node_type', $info->type);
}

/**
 * Helper function for install and hook_node_type_insert().
 */
function _scratchpads_autotag_save_defaults_for_node_type($node_type){
  $instances = field_info_instances('node', $node_type);
  if(isset($instances['field_taxonomic_name']) && !variable_get("tagtag_replace_$node_type", FALSE)){
    variable_set("tagtag_replace_$node_type", '1');
    variable_set("tagtag_field_$node_type", 'field_taxonomic_name');
    variable_set("tagtag_ui_$node_type", 'tag_on_save');
    variable_set("tagtag_search_$node_type", array(
      'autotag'
    ));
    $search_fields = array();
    foreach($instances as $key => $instance){
      if(in_array($instance['widget']['module'], array(
        'taxonomy',
        'text',
        'options'
      )) && $key != 'field_taxonomic_name'){
        $search_fields[] = $key;
      }
    }
    variable_set("tagtag_search_fields_$node_type", $search_fields);
  }
}

/**
 * Implementation of hook_node_type_delete().
 */
function scratchpads_autotag_node_type_delete($info){
  if(is_object($info) && isset($info->type)){
    // Delete variables.
    variable_del("tagtag_replace_{$info->type}");
    variable_del("tagtag_field_{$info->type}");
    variable_del("tagtag_ui_{$info->type}");
    variable_del("tagtag_search_{$info->type}");
    variable_del("tagtag_search_fields_{$info->type}");
  }
}