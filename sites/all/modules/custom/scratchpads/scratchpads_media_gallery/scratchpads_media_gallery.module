<?php
include_once ('scratchpads_media_gallery.features.inc');

/**
 * Implementation of hook_menu_alter().
 */
function scratchpads_media_gallery_menu_alter(&$items){
  $items['gallery']['menu_name'] = PRIMARY_MENU_NAME;
  $items['gallery']['weight'] = 1;
  $items['gallery']['type'] = MENU_NORMAL_ITEM;
}

/**
 * Implementation of hook_scratchpads_solr_info().
 */
function scratchpads_media_gallery_scratchpads_solr_info(){
  return array(
    'gallery' => array(
      'theme' => 'scratchpads_media_gallery'
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function scratchpads_media_gallery_theme(){
  return array(
    'scratchpads_media_gallery' => array(
      'variables' => array(
        'results' => NULL,
        'module' => NULL
      ),
      'file' => 'scratchpads_media_gallery.theme.inc'
    )
  );
}

/**
 * Implementation of hook_node_view_alter().
 */
function scratchpads_media_gallery_node_view($node, $view_mode, $langcode){
  if($node->type == 'image_gallery' && arg(0) == 'node' && is_numeric(arg(1)) && !arg(2)){
    drupal_goto('gallery/' . $node->nid);
  }
}

/**
 * Implementation of hook_page_alter().
 */
function scratchpads_media_gallery_menu_local_tasks_alter(&$data, $router_item, $root_path){
  if($router_item['path'] == 'gallery/%' && is_numeric(arg(1)) && node_access('update', node_load(arg(1)))){
    // Add a tab linking to node/add to all pages.
    $data['tabs'][0]['output'][] = array(
      '#theme' => 'menu_local_task',
      '#link' => array(
        'title' => t('Edit'),
        'href' => 'node/' . arg(1) . '/edit',
        'localized_options' => array(
          'attributes' => array(
            'title' => t('Edit this gallery')
          )
        )
      )
    );
    $data['tabs'][0]['output'][0]['#active'] = TRUE;
    $data['tabs'][0]['count'] = 2;
  }
}

/**
 * Implementation of hook_node_insert().
 */
function scratchpads_media_gallery_node_insert($node){
  // We edit the file entities to add this node id to their respective field.
  $new_fids = array();
  foreach($node->field_smg_media[LANGUAGE_NONE] as $delta => $values){
    $new_fids[$values['fid']] = $values['fid'];
  }
  $files = entity_load('file', $new_fids);
  foreach($files as $file){
    // Adding
    if(!isset($file->field_smg_galleries[LANGUAGE_NONE])){
      $file->field_smg_galleries[LANGUAGE_NONE] = array();
    }
    $file->field_smg_galleries[LANGUAGE_NONE][] = array(
      'nid' => $node->nid
    );
    entity_save('file', $file);
  }
}

/**
 * Implementation of hook_node_update().
 */
function scratchpads_media_gallery_node_update($node){
  // We edit the file entities to add this node id to their respective field.
  // We simply get a list of fids that currently have this node associated, and
  // remove the ones that have been removed, and add ones that have been added.
  $results = db_select('field_data_field_smg_galleries', 'f')->fields('f', array(
    'entity_id'
  ))->condition('field_smg_galleries_nid', $node->nid)->execute();
  $current_fids = array();
  while($row = $results->fetch()){
    $current_fids[$row->entity_id] = $row->entity_id;
  }
  $new_fids = array();
  foreach($node->field_smg_media[LANGUAGE_NONE] as $delta => $values){
    $new_fids[$values['fid']] = $values['fid'];
  }
  $fids_to_add = array_diff_key($new_fids, $current_fids);
  $fids_to_remove = array_diff_key($current_fids, $new_fids);
  $files = entity_load('file', $fids_to_add);
  foreach($files as $file){
    // Adding
    if(!isset($file->field_smg_galleries[LANGUAGE_NONE])){
      $file->field_smg_galleries[LANGUAGE_NONE] = array();
    }
    $file->field_smg_galleries[LANGUAGE_NONE][] = array(
      'nid' => $node->nid
    );
    entity_save('file', $file);
  }
  $files = entity_load('file', $fids_to_remove);
  foreach($files as $file){
    // Removing
    foreach($file->field_smg_galleries[LANGUAGE_NONE] as $delta => $value){
      if($value['nid'] == $node->nid){
        unset($file->field_smg_galleries[LANGUAGE_NONE][$delta]);
      }
    }
    entity_save('file', $file);
  }
}

/**
 * Implementation of hook_facetapi_facet_info().
 */
function scratchpads_media_gallery_facetapi_facet_info($searcher_info){
  // Facets are usually associated with the type of content stored in the index.
  if(isset($searcher_info['types']['file'])){return array(
      'im_field_smg_galleries' => array(
        'name' => 'im_field_smg_galleries',
        'label' => t('Media: Galleries'),
        'description' => t('Media: Galleries'),
        'query types' => array(
          'term'
        ),
        'map callback' => 'scratchpads_media_gallery_map_callback',
        'map options' => array(
          'im_field_smg_galleries'
        )
      )
    );}
  return array();
}

/**
 * Map callback
 */
function scratchpads_media_gallery_map_callback($values, $options){
  if(count($values)){
    switch($options[0]){
      case 'im_field_smg_galleries':
        $result = db_select('node', 'n')->fields('n', array(
          'nid',
          'title'
        ))->condition('nid', $values, 'IN')->execute();
        $map = array();
        while($record = $result->fetchAssoc()){
          $map[$record['nid']] = $record['title'];
        }
        return $map;
    }
  }else{
    return array();
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 * 
function scratchpads_media_gallery_form_image_gallery_node_form_alter(&$form, &$form_state, $form_id){}
 */