<?php

/*********************************************************************************************
 * 
 * HOOKS
 * 
 ********************************************************************************************/
/**
 * Implements hook_menu().
 */
function scratchpads_species_menu(){
  $weight = 1;
  foreach(scratchpads_species_get_tabs() as $tab){
    $items['taxonomy/term/%taxonomy_term/' . strtolower($tab)] = array(
      'title' => $tab,
      'page callback' => 'scratchpads_species_term_page',
      'page arguments' => array(
        2,
        3
      ),
      'access callback' => 'scratchpads_species_access_callback',
      'access arguments' => array(
        2,
        'species'
      ),
      'type' => MENU_LOCAL_TASK,
      'weight' => $weight++,
      'file' => 'taxonomy.pages.inc',
      'file path' => drupal_get_path('module', 'taxonomy')
    );
  }
  return $items;
}
/**
 * Implements hook_menu_alter().
 */
function scratchpads_species_menu_alter(&$items){
  $items['taxonomy/term/%taxonomy_term/view']['title callback'] = 'scratchpads_species_title_callback';
  $items['taxonomy/term/%taxonomy_term/view']['title arguments'] = array(
    2
  );
  $items['taxonomy/term/%taxonomy_term']['page callback'] = 'scratchpads_species_term_page';
  //  $items['taxonomy/term/%taxonomy_term/edit']['access callback'] = 'scratchpads_species_access_callback';
  //  $items['taxonomy/term/%taxonomy_term/edit']['access arguments'] = array(
  //    2,
  //    'edit'
  //  );
  $items['taxonomy/term/%taxonomy_term/edit']['context'] = MENU_CONTEXT_INLINE;
  
  if(array_key_exists('taxonomy/term/%taxonomy_term/devel', $items)){
  	$items['taxonomy/term/%taxonomy_term/devel']['context'] = MENU_CONTEXT_INLINE;	
  }
  
  
   //  $items['taxonomy/term/%taxonomy_term/devel']['access callback'] = 'scratchpads_species_access_callback';
//  $items['taxonomy/term/%taxonomy_term/devel']['access arguments'] = array(
//    2,
//    'devel'
//  );
}

/*********************************************************************************************
 * 
 * MENU CALLBACKS
 * 
 ********************************************************************************************/
function scratchpads_species_title_callback($term){
  if(scratchpads_species_term_is_biological_classification($term)){
    return t("Overview");
  }else{
    return t("View");
  }
}

function scratchpads_species_access_callback($term, $op = null){
  $biological = scratchpads_species_term_is_biological_classification($term);
  switch($op){
    // If this is a species tab, check it's a biological classification]
    // If it's not return false to hide the tab 
    case 'species':
      if($biological){
        return user_access('access content');
      }else{
        return false;
      }
      break;
    case 'edit':
      // If this is a biological tab, hide the edit tab 
      if($biological){
        return false;
      }else{
        return taxonomy_term_edit_access($term);
      }
      break;
    case 'devel':
      // If this is a biological tab, hide the edit tab 
      if($biological){
        return false;
      }else{
        return user_access('access devel information');
      }
      break;
    default:
      return user_access('access content');
      break;
  }
}

function scratchpads_species_term_page($term, $op = 'overview'){
  if(scratchpads_species_term_is_biological_classification($term)){
    // Copied from context_entity_prepare_view()
    // Trigger the taxonomy viewing condition 
    if($plugin = context_get_plugin('condition', 'taxonomy_term')){
      $plugin->execute($term, 'view');
    }
    // Trigger the species tab condition
    if($plugin = context_get_plugin('condition', 'species')){
      $plugin->execute($op);
    }
    // Return a blank page contextual links
    $build = array(
      '#theme' => 'page',
      '#type' => 'page',
      'content' => array(
        ''
      ),
      '#contextual_links' => array(
        'taxonomy' => array(
          'taxonomy',
          array(
          	'term',
            $term->tid
          )
        )
      )
    );    
  }else{
    $build = taxonomy_term_page($term);
  }
  return $build;
}

/*********************************************************************************************
 * 
 * CONTEXT
 * 
 ********************************************************************************************/
/**
 * Implementation of hook_ctools_plugin_type().
 */
function scratchpads_species_ctools_plugin_type(){
  return array(
    'plugins' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array(
        'handler'
      )
    )
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function scratchpads_species_ctools_plugin_api(){
  list($module, $api) = func_get_args();
  if($module == "context" && $api == "context"){return array(
      "version" => "3"
    );}
}

/**
 * CTools plugin API hook for Context. Note that a proper entry in
 * hook_ctools_plugin_api() must exist for this hook to be called.
 */
function scratchpads_species_context_plugins(){
  $plugins = array();
  $plugins['scratchpads_species_context_condition'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'scratchpads_species') . '/plugins',
      'file' => 'scratchpads_species_context_condition.inc',
      'class' => 'scratchpads_species_context_condition',
      'parent' => 'context_condition'
    )
  );
  return $plugins;
}

/**
 * Implementation of hook_context_registry().
 * Register the context plugins
 */
function scratchpads_species_context_registry(){
  return array(
    'conditions' => array(
      'species' => array(
        'title' => t('Species page'),
        'plugin' => 'scratchpads_species_context_condition'
      )
    )
  );
}

/*********************************************************************************************
 * 
 * MODULE FUNCTIONS
 * 
 ********************************************************************************************/
/**
 * Check if a term is a biological classification
 */
function scratchpads_species_term_is_biological_classification($term){
  global $conf;
  if(property_exists($term, 'field_unit_name1')){
    if(array_key_exists($term->vid, $conf['biological_vids'])){return true;}
  }
  return false;
}

/**
 * Return a list of species tabs
 */
function scratchpads_species_get_tabs(){
  $tabs = array(
    'Media',
    'Literature',
    'Maps',
    'Specimens',
    'Phylogeny',
    'EOL'
  );
  return $tabs;
}