<?php

function taxon_stats_menu(){
  $items = array();
  $items['taxonomy/term/%taxonomy_term/stats'] = array(
    'title' => 'Stats',
    'page callback' => 'taxon_stats_view',
    'page arguments' => array(
      2,
    ),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 24,
    'file' => 'taxonomy.pages.inc',
    'file path' => drupal_get_path('module', 'taxonomy')
  );
  $items['taxon_stats/biblio'] = array(
    'title' => 'Publication Statistics',
    'page callback' => 'taxon_stats_overall_pubs',
    'access callback' => true,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


function taxon_stats_overall_pubs(){
	 //include Google Charts necessaries
  $script = '<script type="text/javascript" src="https://www.google.com/jsapi"></script>';
  $element = array(
   '#type' => 'markup',
   '#markup' => $script,
  );
  drupal_add_html_head($element, 'google-charts-api');
  drupal_add_js(drupal_get_path('module', 'taxon_stats').'/biblio_chart.js');
  
    //Publications overall
	$sql = "SELECT biblio_year AS year, COUNT(biblio_year) AS count FROM biblio GROUP BY biblio_year";
	$results = db_query($sql)->fetchAllAssoc('year');
    $output = '<div class="biblio_charts" id="biblio_chart"></div>'
            . '<div id="biblio_chart_data" data-title="Publications by Year">';
    foreach ($results as $result){
    	$output .= '<span data-year="'.$result->year.'" data-count="'.$result->count.'"></span>';
    }
    $output .= '</div>';
    
    //Protologues
    $sql = "SELECT b.biblio_year AS year, COUNT(b.biblio_year) AS count, t.name  FROM biblio b INNER JOIN biblio_types t ON b.biblio_type = t.tid WHERE t.name = 'Botanical Protologue' GROUP BY biblio_year";
    $results = db_query($sql)->fetchAllAssoc('year');
    $output .= '<div class="biblio_charts" id="protologue_chart"></div>'
             . '<div id="protologue_chart_data" data-title="Species Descriptions by Year">';
    foreach ($results as $result){
    	$output .= '<span data-year="'.$result->year.'" data-count="'.$result->count.'"></span>';
    }
    $output .= '</div>';
    return $output;
}

function taxon_stats_view($term){
 //include Google Charts necessaries
 $script = '<script type="text/javascript" src="https://www.google.com/jsapi"></script>';
 $element = array(
   '#type' => 'markup',
   '#markup' => $script,
 );
 drupal_add_html_head($element, 'google-charts-api');
 drupal_add_js(drupal_get_path('module', 'taxon_stats').'/chart.js');
 drupal_add_css(drupal_get_path('module', 'taxon_stats').'/taxon_stats.css');
	
 $content_counts =  taxon_stats_get_taxon_data($term);
 $overall_content_counts = taxon_stats_get_overall_data($term);
 $output = '<table id="taxon_stats_table">'
         . '<thead>'
         . '<tr><td></td><td >Descriptions</td><td >Media</td><td >Specimens/Observations</td><td>References</td></tr>'
         . '</thead>'
         
         . '<tr>'
         . '<td>'
         . $term->name
         . '</td>'
         . '<td >'.$content_counts['Descriptions'].'</td>'
         . '<td >'.$content_counts['Images'].'</td>'
         . '<td >'.$content_counts['Specimens/Observations'].'</td>'
         . '<td >'.$content_counts['References'].'</td>'
         . '</tr>'
         
         . '<tr>'
         . '<td>'
         . 'Fraction of all taxa with content'
         . '</td>'
         . '<td><div class="ts_chart" data-numerator="'.$overall_content_counts['Descriptions'].'" data-denominator="'.$overall_content_counts['Total'].'" id="chart_desc"></div>'.$overall_content_counts['Descriptions'].'/'.$overall_content_counts['Total'].'</td>'
         . '<td><div class="ts_chart" data-numerator="'.$overall_content_counts['Images'].'" data-denominator="'.$overall_content_counts['Total'].'" id="chart_imgs"></div>'.$overall_content_counts['Images'].'/'.$overall_content_counts['Total'].'</td>'
         . '<td><div class="ts_chart" data-numerator="'.$overall_content_counts['Specimens/Observations'].'" data-denominator="'.$overall_content_counts['Total'].'" id="chart_spob"></div>'.$overall_content_counts['Specimens/Observations'].'/'.$overall_content_counts['Total'].'</td>'
         . '<td><div class="ts_chart" data-numerator="'.$overall_content_counts['References'].'" data-denominator="'.$overall_content_counts['Total'].'" id="chart_bibl"></div>'.$overall_content_counts['References'].'/'.$overall_content_counts['Total'].'</td>'
         . '</tr>'
         
         . '</table>'
  ;

 
 
 return $output;
}

function taxon_stats_views_api(){
  $path = drupal_get_path('module', 'taxon_stats');
  return array(
    'api' => '3',
    'path' => $path
  );
}

function taxon_stats_ctools_plugin_api(){
  list($module, $api) = func_get_args();
  if($module == "context" && $api == "context"){return array(
      "version" => "3"
    );}
}

function taxon_stats_context_default_contexts(){
  $export = array();
  $context = new stdClass();
  $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
  $context->api_version = 3;
  $context->name = 'species_statistics';
  $context->description = 'Statistics species page.';
  $context->tag = 'Species';
  $context->conditions = array(
    'path' => array(
      'values' => array(
        'taxonomy/term/*/stats' => 'taxonomy/term/*/stats',
      )
    )
  );
  $context->condition_mode = 0;
  // Translatables
  // Included for use with string extractors like potx.
  t('Statistics species page.');
  t('Species');
  $export['species_statistics'] = $context;
  return $export;
}

function taxon_stats_context_load_alter(&$context){
  if($context->name == 'species_statistics'){
    //Get vid
    global $_GET;
    $args = explode('/', $_GET['q']);
    if($args[0] == 'taxonomy' && $args[1] == 'term' && is_int((int)$args[2])){
      $result = db_query("SELECT vid FROM {taxonomy_term_data} WHERE tid = :tid", array(
        ':tid' => $args[2]
      ));
      $vid = $result->fetchObject()->vid;
      $context->reactions = array(
        'block' => array(
          'blocks' => array(
            'tinytax-' . $vid => array(
              'module' => 'tinytax',
              'delta' => $vid,
              'region' => 'sidebar',
              'weight' => '0'
            )
          )
        ),
        'menu' => 'classification/' . $vid
      );
    }
  }
}


function taxon_stats_get_taxon_data($term){
  $return = array();
    $view = views_get_view('taxon_stats');
    $displays = $view->display;
    unset($view);
    foreach ($displays as $id => $display){
  	  if ($id != 'default'){
  	    $view = views_get_view('taxon_stats');
        $view->set_arguments(array($term->tid));
        $view->set_display($display->id);
        $view->pre_execute();
        $view->execute();
        $return[$display->display_title] = $view->result[0]->taxonomy_term_data_name;
        unset($view);
  	  }
    }
  return $return;
}

function taxon_stats_get_overall_data($term){
  $return = array();
  $sql = "SELECT COUNT(*) AS 'Total' FROM taxonomy_term_data WHERE vid = :vid";
  $result = db_query($sql, array(':vid' => $term->vid))->fetchAll();
  $return['Total'] = $result[0]->Total;
  
  $sql = "SELECT COUNT(DISTINCT(t.tid)) AS 'Total' FROM taxonomy_term_data t "
            . "INNER JOIN taxonomy_index i ON t.tid = i.tid "
            . "INNER JOIN node n ON n.nid = i.nid "
            . "WHERE t.vid = :vid AND n.type = :type";
  $types = array('Descriptions' => 'spm', 'Specimens/Observations' => 'specimen_observation', 'References' => 'biblio', 'Images' => 'media_gallery');
  foreach ($types as $key => $value){
  	$result = db_query($sql, array(':vid' => $term->vid, ':type' => $value))->fetchAll();
  	$return[$key] = $result[0]->Total;
  }
  
  return $return;
}